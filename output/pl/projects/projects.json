{
    "android_flashlight": {
        "bugtracker": "https://github.com/Kwpolska/flashlight/issues",
        "data": "",
        "description": "Yet another Android flashlight.",
        "devstatus": "7",
        "download": "https://github.com/Kwpolska/flashlight/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/flashlight",
        "hyphenate": "",
        "language": "Java",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/android_flashlight/",
        "role": "Maintainer",
        "slug": "android_flashlight",
        "sort": "1",
        "status": "",
        "template": "",
        "text": "<div><p>This is yet another Android flashlight.  It does the usual thing: turn the\ncamera flash LED on.  It can\u2019t do anything else.</p>\n<p>This is a code dump/proof-of-concept.</p></div>",
        "title": "Android Flashlight",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "aurqt": {
        "data": "",
        "description": "A graphical AUR manager.",
        "devstatus": "7",
        "filters": "",
        "github": "https://github.com/Kwpolska/aurqt",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "logo": "/projects/_logos/aurqt.png",
        "permalink": "/pl/projects/aurqt/",
        "role": "Maintainer",
        "slug": "aurqt",
        "sort": "9",
        "status": "",
        "template": "",
        "text": "<div><p>aurqt, the graphical AUR manager, has been abandoned and is not available\nanymore due to multiple changes in the AUR itself and the status of the code\nbase that would require a full rewrite.  I apologize for the inconvenience.</p>\n<p>aurqt depended on <a class=\"reference external\" href=\"/pl/projects/pkgbuilder/\">PKGBUILDer</a> for most features.</p>\n<p>(If anyone wants to take over development, please contact me.)</p></div>",
        "title": "aurqt",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "cheqlist": {
        "bugtracker": "https://github.com/Kwpolska/cheqlist/issues",
        "data": "",
        "description": "A simple Qt checklist.",
        "devstatus": "3",
        "download": "https://pypi.python.org/pypi/cheqlist",
        "featured": "true",
        "filters": "",
        "github": "https://github.com/Kwpolska/cheqlist",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/cheqlist/",
        "previewimage": "/projects/_banners/cheqlist.png",
        "role": "Maintainer",
        "slug": "cheqlist",
        "sort": "94",
        "status": "",
        "template": "",
        "text": "<div><p><code class=\"docutils literal\">cheqlist</code> is a simple check list application for Qt. It supports formatting,\nfile input/output, and an undo stack.</p>\n<div class=\"figure\">\n<a class=\"reference external image-reference\" href=\"/projects/_banners/cheqlist.png\"><img alt=\"/projects/_banners/cheqlist.thumbnail.png\" src=\"/projects/_banners/cheqlist.thumbnail.png\"></a>\n<p class=\"caption\">Cheqlist screenshot.</p>\n</div>\n<p>You can install <code class=\"docutils literal\">cheqlist</code> from <a class=\"reference external\" href=\"https://pypi.python.org/pypi/cheqlist\">PyPI</a> (with <code class=\"docutils literal\">pip install cheqlist</code>). Arch Linux\nusers can install the <code class=\"docutils literal\">cheqlist</code> package from the AUR.</p></div>",
        "title": "Cheqlist",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "datecalc": {
        "bugtracker": "https://github.com/Kwpolska/datecalc/issues",
        "data": "",
        "description": "A simple date calculator.",
        "devstatus": "5",
        "download": "https://github.com/Kwpolska/datecalc/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/datecalc",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/datecalc/",
        "role": "Maintainer",
        "slug": "datecalc",
        "sort": "90",
        "status": "",
        "template": "",
        "text": "<div><p>A simple date calculator that can calculate the difference between two dates or\nadd/subtract a given number of days, hours, minutes, seconds to a date.</p>\n<p>User interfaces: CLI (<code class=\"docutils literal\">datecalc</code>, <code class=\"docutils literal\"><span class=\"pre\">datecalc-cli</span></code>) and GUI (<code class=\"docutils literal\"><span class=\"pre\">datecalc-gui</span></code> \u2014 requires PyQt5).</p></div>",
        "title": "Date Calculator",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "datecond": {
        "bugtracker": "https://github.com/Kwpolska/datecond/issues",
        "data": "",
        "description": "Date range parser in Python.",
        "devstatus": "4",
        "download": "https://github.com/Kwpolska/datecond/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/datecond",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/datecond/",
        "role": "Maintainer",
        "slug": "datecond",
        "sort": "30",
        "status": "",
        "template": "",
        "text": "<div><p>This is a minimalistic (and slightly hacky) parser for date range conditionals.</p>\n<p>Supported format:</p>\n<ul class=\"simple\">\n<li><p>comma-separated clauses (AND)</p></li>\n<li><dl class=\"simple\">\n<dt>clause: attribute comparison_operator value (spaces optional)</dt>\n<dd><ul>\n<li><p>attribute: year, month, day, hour, month, second, weekday, isoweekday or empty for full datetime</p></li>\n<li><p>comparison_operator: == != &lt;= &gt;= &lt; &gt;</p></li>\n<li><p>value: integer, 'now' or dateutil-compatible date input</p></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>For example, you can state <code class=\"docutils literal\">year == 2016, month &gt; 06, day &gt;= 07</code> which\nmatches dates between July and December 2016, but ignoring days 1-6 of each\nmonth.</p></div>",
        "title": "Date Conditionals",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "displaymenu": {
        "bugtracker": "https://github.com/Kwpolska/DisplayMenu/issues",
        "data": "",
        "description": "A simple macOS menubar extra to apply display presets.",
        "devstatus": "4",
        "download": "https://github.com/Kwpolska/DisplayMenu/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/DisplayMenu",
        "hyphenate": "",
        "language": "Swift",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/displaymenu/",
        "role": "Maintainer",
        "slug": "displaymenu",
        "sort": "40",
        "status": "",
        "template": "",
        "text": "<div><p>A simple macOS menubar extra to apply display presets. A preset consists of\nscreen resolutions, mirroring configurations, and dock settings.</p>\n<p>I\u2019m using a MacBook Pro with an external display. I sometimes need to switch to\nonly one display \u2014 mirroring is useful here. Although I can afford to put the\ndock at the bottom in dual-screen mode, it works better on the right if I\u2019m\ntight on space. Also when working on the MacBook screen, I can switch to a\nhigher resolution.</p>\n<p>This is where Display Menu comes in. I can pick a display preset (mirroring,\nscreen resolution, dock position and icon size) \u2014 for example, <em>dual screen</em> or\n<em>MacBook only, 1440\u00d7900</em> \u2014 and get to work quickly.</p></div>",
        "title": "Display Menu",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "django-kwshortener": {
        "bugtracker": "https://github.com/Kwpolska/django-kwshortener/issues",
        "data": "",
        "description": "Yet another URL shortener.",
        "devstatus": "4",
        "filters": "",
        "github": "https://github.com/Kwpolska/django-kwshortener",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/django-kwshortener/",
        "role": "Maintainer",
        "slug": "django-kwshortener",
        "sort": "10",
        "status": "",
        "template": "",
        "text": "<div><p>This is yet another URL shortener, which does not respect many best practices.</p>\n<p>Live: <a class=\"reference external\" href=\"https://go.chriswarrick.com/\">https://go.chriswarrick.com/</a></p></div>",
        "title": "KwShortener for Django",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "fraction": {
        "bugtracker": "https://github.com/Kwpolska/fraction.java/issues",
        "data": "",
        "description": "A simple implementation of fractions in Java and C++.",
        "devstatus": "5",
        "filters": "",
        "github": "https://github.com/Kwpolska/fraction.java",
        "hyphenate": "",
        "language": "Java, C++",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/fraction/",
        "role": "Maintainer",
        "slug": "fraction",
        "sort": "20",
        "status": "",
        "template": "",
        "text": "<div><p class=\"lead\">Versions: <a class=\"reference external\" href=\"https://github.com/Kwpolska/fraction.java\">Java</a>, <a class=\"reference external\" href=\"https://github.com/Kwpolska/fraction.cpp\">C++</a>.</p>\n<p>A simple implementation of fractions, used to learn OOP in Java and C++.</p>\n<p>The Fraction class supports:</p>\n<ul class=\"simple\">\n<li><p>addition, subtraction, multiplication and division (via methods in Java and operator overloading in C++)</p></li>\n<li><p>simplification (2/4 -&gt; 1/2)</p></li>\n<li><p>mixed numbers (eg. 5/2 == 2 1/2)</p></li>\n</ul>\n<p>The Fraction class currently does not support:</p>\n<ul class=\"simple\">\n<li><p>comparisons</p></li>\n<li><p>unit testing</p></li>\n</ul>\n<p>The Fraction class was written in Java first and then rewritten in C++. It was\na learning exercise to understand how to write object-oriented code in those\ntwo languages.</p>\n<p>The class is documented in Javadoc and Doxygen (but the docs are not shipped as\nof now).</p></div>",
        "title": "Fraction (Java, C++)",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "kwkeyboard": {
        "data": "",
        "description": "An opinionated keyboard layout for Windows, Linux (X11) and macOS.",
        "devstatus": "5",
        "download": "https://chriswarrick.com/projects/kwkeyboard/#downloads",
        "filters": "",
        "hyphenate": "",
        "language": "multiple",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/kwkeyboard/",
        "role": "Maintainer",
        "slug": "kwkeyboard",
        "sort": "10",
        "status": "",
        "template": "",
        "text": "<div><p>An opinionated keyboard layout for Windows, Linux (X11) and macOS.  Perfect for Polish, good enough for some other European languages.</p>\n<div class=\"section\" id=\"downloads\">\n<h2>Downloads</h2>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"/pub/KwKeyboard/KwKeyboard-Windows-2017-03.zip\">KwKeyboard-Windows-2017-03.zip</a></p></li>\n<li><p><a class=\"reference external\" href=\"/pub/KwKeyboard/KwKeyboard-Linux-2017-03.zip\">KwKeyboard-Linux-2017-03.zip</a></p></li>\n<li><p><a class=\"reference external\" href=\"/pub/KwKeyboard/KwKeyboard-macOS-2017-03a.dmg\">KwKeyboard-macOS-2017-03a.dmg</a></p></li>\n<li><p>Preview: <a class=\"reference external\" href=\"/pub/KwKeyboard/Layout-macOS.pdf\">Layout-macOS.pdf</a></p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<ul class=\"simple\">\n<li><p>Windows: run <code class=\"docutils literal\">setup.exe</code></p></li>\n<li><p>Linux (X11): <code class=\"docutils literal\">sudo mv <span class=\"pre\">xkb-symbols</span> /usr/share/X11/xkb/symbols/pl &amp;&amp; setxkbmap pl</code> (use default Polish layout)</p></li>\n<li><p>macOS: mount disk image; drag-and-drop the bundle to <code class=\"docutils literal\">Keyboard Layouts</code></p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"version-differences\">\n<h2>Version differences</h2>\n<ul class=\"simple\">\n<li><p>macOS has some Apple additions: Apple logo on Shift-Option-F, Command on Option-G, Option on Shift-Option-G</p></li>\n<li><p>Windows and Linux instead feature a lower single quote on Alt-Shift-F, and the letter eng (\u014a \u014b) on Alt-G, Alt-Shift-G.</p></li>\n<li><p>Version 2017-03a is for macOS only (released in 2017-08). The only difference is the menubar icon, which has been redrawn to account for dual screen configurations (the @2x icon is downscaled to @1x).</p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"customization\">\n<h2>Customization</h2>\n<ul class=\"simple\">\n<li><p>Windows: install Microsoft Keyboard Layout Creator (MSKLC) \u2014 Windows 7 recommended</p></li>\n<li><p>Linux: edit the plain-text file (/usr/include/X11/keysymdef.h for reference)</p></li>\n<li><p>macOS: install Ukelele</p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"license\">\n<h2>License</h2>\n<p>Copyright \u00a9 2012-2017, Chris Warrick.\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<ol class=\"arabic simple\">\n<li><p>Redistributions of source code must retain the above copyright\nnotice, this list of conditions, and the following disclaimer.</p></li>\n<li><p>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions, and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.</p></li>\n<li><p>Neither the name of the author of this software nor the names of\ncontributors to this software may be used to endorse or promote\nproducts derived from this software without specific prior written\nconsent.</p></li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div></div>",
        "title": "KwKeyboard",
        "type": "text",
        "updated": "2017-03-11 20:44:45+01:00"
    },
    "kwpbar": {
        "data": "",
        "description": "A collection of progress bars.",
        "devstatus": "5",
        "featured": "false",
        "filters": "",
        "hyphenate": "",
        "language": "Python, C",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/kwpbar/",
        "role": "Maintainer",
        "slug": "kwpbar",
        "sort": "74",
        "status": "",
        "template": "",
        "text": "<div><div class=\"section\" id=\"languages\">\n<h2>Languages</h2>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://github.com/Kwpolska/kwpbar.c\">C</a></p></li>\n<li><p><a class=\"reference external\" href=\"https://github.com/Kwpolska/kwpbar.py\">Python</a> (<code class=\"docutils literal\">pip install kwpbar</code>)</p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"api\">\n<h2>API</h2>\n<ul class=\"simple\">\n<li><p>int get_termlength() \u2192 return terminal length (columns); helper function</p></li>\n<li><p>int/None pbar(double value, double max) \u2192 print a progress bar to the screen (stderr). Can raise ValueError in Python; returns 0 for success and 1 for failure in C.</p></li>\n<li><p>void/None erase_pbar() \u2192 erase the progress bar from the screen</p></li>\n</ul>\n</div></div>",
        "title": "Progress bar collection",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "nap": {
        "bugtracker": "https://github.com/Kwpolska/nap/issues",
        "data": "",
        "description": "sleep with a progressbar.",
        "devstatus": "5",
        "download": "https://github.com/Kwpolska/nap/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/nap",
        "hyphenate": "",
        "language": "C",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/nap/",
        "role": "Maintainer",
        "slug": "nap",
        "sort": "80",
        "status": "",
        "template": "",
        "text": "<div><p><code class=\"docutils literal\">nap</code> is a special implementation of <code class=\"docutils literal\">sleep</code>.  The main difference is the\npresence of a progressbar: <code class=\"docutils literal\">nap</code> prints out a progressbar and shows how much\ntime has already elapsed.  It is useful for impromptu \u201cscheduling\u201d, so you know\nwhen will the process/wait finish.</p>\n<p><code class=\"docutils literal\">nap</code> takes the best features from both the GNU and BSD variants of\n<code class=\"docutils literal\">sleep</code>: it values BSD-style simplicity, but also supports GNU-style input\nwith units (<code class=\"docutils literal\">s|m|h|d</code>).</p>\n<p>See also: <a class=\"reference external\" href=\"/pl/projects/think/\">think \u2014\u00a0Terminal Think Music</a></p></div>",
        "title": "nap",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "nikola": {
        "bugtracker": "https://github.com/getnikola/nikola/issues",
        "data": "",
        "description": "A Static Site and Blog Generator.",
        "devstatus": "5",
        "download": "https://pypi.python.org/pypi/Nikola",
        "filters": "",
        "github": "https://github.com/getnikola/nikola",
        "hyphenate": "",
        "language": "Python",
        "license": "MIT",
        "link": "https://getnikola.com/",
        "logo": "/projects/_logos/nikola.png",
        "permalink": "/pl/projects/nikola/",
        "previewimage": "/projects/_banners/nikola.png",
        "role": "Co-Maintainer",
        "slug": "nikola",
        "sort": "98",
        "status": "featured",
        "template": "",
        "text": "<div><blockquote>\n<p>In goes content, out comes a website, ready to deploy.</p>\n<footer><cite>Nikola tagline</cite></footer>\n</blockquote><p>Nikola is a static site and blog generator, written in Python.  It can\nuse Mako and Jinja2 templates, and input in many popular markup\nformats, such as reStructuredText and Markdown \u2014 and can even turn\nJupyter Notebooks into blog posts! It also supports image galleries,\nand is multilingual.  Nikola is flexible, and page builds are\nextremely fast, courtesy of doit (which is rebuilding only what has\nbeen changed).</p>\n<p>Unlike many other generators, Nikola comes with <em>batteries included</em> and offers\nmany features out of the box, making it easy to create a modern website.</p>\n<p>I am a co-maintainer of Nikola, responsible for a sizeable fraction of commits\n\u2014 but I am not the one who did the most work and came up with the idea (it was\n<a class=\"reference external\" href=\"http://ralsina.me/\">Roberto Alsina</a>).</p>\n<p>This very website is powered by Nikola.</p></div>",
        "title": "Nikola",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "numbernamer": {
        "bugtracker": "https://github.com/Kwpolska/numbernamer/issues",
        "data": "",
        "description": "A simple number namer for Java and Android.",
        "devstatus": "5",
        "download": "https://github.com/Kwpolska/numbernamer/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/numbernamer",
        "hyphenate": "",
        "language": "Java",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/numbernamer/",
        "role": "Maintainer",
        "slug": "numbernamer",
        "sort": "88",
        "status": "",
        "template": "",
        "text": "<div><p>A very simple number namer.</p>\n<div class=\"section\" id=\"supported-languages\">\n<h2>Supported languages</h2>\n<ul class=\"simple\">\n<li><p>English</p></li>\n<li><p>Polish</p></li>\n<li><p>German</p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"interfaces\">\n<h2>Interfaces</h2>\n<ul class=\"simple\">\n<li><p>Built-in</p>\n<ul>\n<li><p>Console: <code class=\"docutils literal\"><span class=\"pre\">NumberNamer-console.jar</span></code></p></li>\n<li><p>GUI: <code class=\"docutils literal\"><span class=\"pre\">NumberNamer-console.jar</span></code></p></li>\n</ul>\n</li>\n<li><p><a class=\"reference external\" href=\"https://github.com/Kwpolska/numbernamer.android\">Android</a>\n(<a class=\"reference external\" href=\"https://github.com/Kwpolska/numbernamer.android/releases\">Releases</a>)</p></li>\n</ul>\n</div></div>",
        "title": "Number Namer",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "peselreader": {
        "bugtracker": "https://github.com/Kwpolska/peselreader/issues",
        "data": "",
        "description": "A small program for reading PESEL numbers.",
        "devstatus": "6",
        "download": "https://github.com/Kwpolska/peselreader/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/peselreader",
        "hyphenate": "",
        "language": "C",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/peselreader/",
        "role": "Maintainer",
        "slug": "peselreader",
        "sort": "76",
        "status": "",
        "template": "",
        "text": "<div><p>This very small piece of software decodes PESEL numbers (think SSNs for Polish\ncitizens) into C structs.  The following information is encoded in a PESEL\nnumber (11 digits long; the positions are zero-indexed):</p>\n<ul class=\"simple\">\n<li><p>Date of Birth (positions 0-5)</p></li>\n<li><p>Gender (position 9)</p></li>\n<li><p>Checksum (position 10)</p></li>\n</ul>\n<p>The PESEL Reader is based on the <a class=\"reference external\" href=\"https://msw.gov.pl/pl/sprawy-obywatelskie/centralne-rejestry-pan/32,PESEL.html?sid=1b5a96b2ef9e1ba0b2d3fa56f590c29f#wjakispos%C3%B3b\">official specification</a>, as published by the Ministry of the Interior of the Republic of Poland.</p></div>",
        "title": "PESEL Reader",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "pkgbuilder": {
        "bugtracker": "https://github.com/Kwpolska/pkgbuilder/issues",
        "data": "",
        "description": "An AUR helper (and library) in Python 3.",
        "devstatus": "6",
        "download": "https://pypi.python.org/pypi/pkgbuilder",
        "filters": "",
        "github": "https://github.com/Kwpolska/pkgbuilder",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "logo": "/projects/_logos/pkgbuilder.png",
        "permalink": "/pl/projects/pkgbuilder/",
        "previewimage": "/projects/_banners/pkgbuilder.png",
        "role": "Maintainer",
        "slug": "pkgbuilder",
        "sort": "100",
        "status": "featured",
        "template": "",
        "text": "<div><p>PKGBUILDer is an AUR helper.  It is used to build packages from the Arch User\nRepository.  PKGBUILDer automates the process and provides a command-line user\ninterface.</p>\n<p>There are two executables: <code class=\"docutils literal\">pkgbuilder</code> to run the main mode, which builds\nAUR packages and also ABS packages (instead of downloading ready-made binaries)\nand <code class=\"docutils literal\">pb</code> which builds AUR packages and downloads binary packages from the\nrepos (calls <code class=\"docutils literal\">pacman</code>).  The user interface to both mimics <code class=\"docutils literal\">pacman</code> and\n<code class=\"docutils literal\">makepkg</code> as close as possible.</p>\n<p>PKGBUILDer\u2019s main guideline is \u201cthe user knows what they are doing\u201d \u2014 no\nunnecessary questions are asked.  By typing in a <code class=\"docutils literal\">pkgbuilder</code> command, the\nuser trusts the PKGBUILD file (we hope you read it).  This allows us to be very\nfast.</p>\n<p>PKGBUILDer also implements the most modern techniques available, including\nhandling AUR package upgrades in a <strong>single HTTP request</strong> instead of hundreds\nor even thousands of them, depending on how many packages you have installed.</p>\n<p>PKGBUILDer should be installed from the AUR itself, by installing the\n<code class=\"docutils literal\">pkgbuilder</code> package:</p>\n<pre class=\"literal-block\">wget https://aur.archlinux.org/packages/pk/pkgbuilder/pkgbuilder.tar.gz\ntar -xzvf pkgbuilder\ncd pkgbuilder\nmakepkg -si</pre></div>",
        "title": "PKGBUILDer",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "projectpages": {
        "bugtracker": "https://github.com/getnikola/plugins/issues",
        "data": "",
        "description": "A generator for rich project pages.",
        "devstatus": "5",
        "filters": "",
        "github": "https://github.com/getnikola/plugins/tree/master/v7/projectpages",
        "hyphenate": "",
        "language": "Python",
        "license": "MIT",
        "link": "https://plugins.getnikola.com/#projectpages",
        "permalink": "/pl/projects/projectpages/",
        "role": "Maintainer",
        "slug": "projectpages",
        "sort": "84",
        "status": "",
        "template": "",
        "text": "<body><p>The plugin generates state-of-the-art project pages.  It is compatible with\n<a class=\"reference external\" href=\"/pl/projects/nikola/\">Nikola</a>.  It leverages existing features (story generation,\ncustom metadata) and builds on top of them to create a rich experience.  The\nplugin powers this very <a class=\"reference external\" href=\"/pl/projects/index.html\">projects page</a>.</p></body>",
        "title": "Project Pages plugin for Nikola",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "python-project-template": {
        "bugtracker": "https://github.com/Kwpolska/python-project-template/issues",
        "data": "",
        "description": "INSERT TAGLINE HERE.\u2122",
        "devstatus": "5",
        "filters": "",
        "github": "https://github.com/Kwpolska/python-project-template",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/python-project-template/",
        "previewimage": "/projects/_banners/pypt.png",
        "role": "Maintainer",
        "slug": "python-project-template",
        "sort": "86",
        "status": "featured",
        "template": "",
        "text": "<div><p>A template for Python projects.  It makes it easy to create new Python\nprojects, with just a few replacements required.  Many things are already\nthere, already prepared for you.</p>\n<div class=\"section\" id=\"contents\">\n<h2>Contents</h2>\n<p>The template contains the following files to get you started:</p>\n<ul class=\"simple\">\n<li><p>pre-configured Sphinx with:</p>\n<ul>\n<li><p><code class=\"docutils literal\">CONTRIBUTING.rst</code> guide (used by GitHub when sending a pull request or an issue)</p></li>\n<li><p><code class=\"docutils literal\">LICENSE.rst</code></p></li>\n<li><p>an empty <code class=\"docutils literal\">CHANGELOG.rst</code></p></li>\n<li><p><code class=\"docutils literal\">README.rst</code></p></li>\n<li><p>a bare-bones <code class=\"docutils literal\">index.rst</code> page</p></li>\n</ul>\n</li>\n<li><p>The exact same files in <code class=\"docutils literal\">/</code>, which are fragile and <strong>MAY NOT</strong> be modified\nas they are replaced with copies in <code class=\"docutils literal\">/docs</code> by the <code class=\"docutils literal\">release</code> script</p></li>\n<li><p><code class=\"docutils literal\">__init__.py</code>, <code class=\"docutils literal\">__main__.py</code> and <code class=\"docutils literal\">template.py</code> files in the Python package directory</p></li>\n<li><p>A <code class=\"docutils literal\">setup.py</code> file that could be good enough for people, and that supports\n<code class=\"docutils literal\">entry_points</code> (see <a class=\"reference external\" href=\"https://go.chriswarrick.com/entry_points\">https://go.chriswarrick.com/entry_points</a>).</p></li>\n<li><p><code class=\"docutils literal\">tests/</code> containing some <em>Is My Python Sane?</em>-style tests (using <code class=\"docutils literal\">pytest</code>)</p></li>\n<li><p>An automated global update script (<code class=\"docutils literal\"><span class=\"pre\">.pypt/PYPT-UPDATE</span></code>)</p></li>\n<li><p>Entry points configuration ready to be uncommented (and a matching\n<code class=\"docutils literal\">__main__.py</code> file)</p></li>\n<li><p>Add-ons for Qt users (in <code class=\"docutils literal\"><span class=\"pre\">pypt-extras/Qt</span></code>)</p></li>\n<li><p>A sample hook for AUR updates (in <code class=\"docutils literal\"><span class=\"pre\">pypt-extras/AUR</span></code>)</p></li>\n<li><p>PKGBUILDs for the Arch Linux User Repository (AUR)</p></li>\n<li><p>A state-of-the-art <code class=\"docutils literal\">release</code> script, the operations of which are:</p>\n<ul>\n<li><p>querying the user for version number, commit message and changes</p></li>\n<li><p>updating <code class=\"docutils literal\">/docs/CHANGELOG.rst</code></p></li>\n<li><p>bumping the version number in all the files, changing dates where necessary</p></li>\n<li><p>copying over <code class=\"docutils literal\">/docs/README.rst</code>,  <code class=\"docutils literal\">/docs/CHANGELOG.rst</code> and <code class=\"docutils literal\">/docs/CONTRIBUTING.rst</code> to <code class=\"docutils literal\">/</code></p></li>\n<li><p>locale generation (via the <code class=\"docutils literal\">.pypt/localegen</code> script)</p></li>\n<li><p>running <code class=\"docutils literal\">import $PROJECTLC</code> and the test suite</p></li>\n<li><p>uploading a source distribution and a wheel to PyPI</p></li>\n<li><p>Making a Git commit and tagging the release</p></li>\n<li><p>creating a GitHub Releases entry</p></li>\n<li><p>updating the AUR packages (by using hooks)</p></li>\n</ul>\n</li>\n</ul>\n</div></div>",
        "title": "Python Project Template",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "seClock": {
        "bugtracker": "https://github.com/Kwpolska/seClock/issues",
        "data": "",
        "description": "A simple Android app that displays a clock with seconds.",
        "devstatus": "5",
        "download": "https://github.com/Kwpolska/seClock/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/seClock",
        "hyphenate": "",
        "language": "Java",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/seClock/",
        "role": "Maintainer",
        "slug": "seClock",
        "sort": "15",
        "status": "",
        "template": "",
        "text": "<div><p>A simple Android app that displays a clock with seconds.</p>\n<p>That\u2019s really it. It can adapt to screen orientations, and it hopefully\ndoesn\u2019t make the clock too large.</p></div>",
        "title": "seClock",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "speeker": {
        "bugtracker": "https://github.com/Kwpolska/speeker/issues",
        "data": "",
        "description": "An Android TTS client.",
        "devstatus": "4",
        "download": "https://github.com/Kwpolska/speeker/releases",
        "filters": "",
        "gallery": "/galleries/speeker/",
        "github": "https://github.com/Kwpolska/speeker",
        "hyphenate": "",
        "language": "Java",
        "license": "3-clause BSD",
        "logo": "/projects/_logos/speeker.png",
        "permalink": "/pl/projects/speeker/",
        "role": "Maintainer",
        "slug": "speeker",
        "sort": "40",
        "status": "",
        "template": "",
        "text": "<div><p>This is a simple Android app for Text-to-Speech. It uses the default system voice.</p>\n<p>See also: <a class=\"reference external\" href=\"https://chriswarrick.com/galleries/speeker/\">screenshots</a> and <a class=\"reference external\" href=\"https://chriswarrick.com/blog/2014/08/26/speeker/\">introductory blog post</a>.</p>\n<blockquote>\n<p>Speeker is a very small and easy frontend to the system TTS service.  In its\ncurrent iteration, it\u2019s quite limited. The complete feature set is:</p>\n<ul class=\"simple\">\n<li><p>speak text provided by the user</p></li>\n<li><p>speak text in the system default TTS language (as set in Android settings,\nand there is currently no button to even get you there)</p></li>\n<li><p>clear the text box</p></li>\n<li><p>display About screen</p></li>\n<li><p>display open source licenses</p></li>\n<li><p>open my website</p></li>\n</ul>\n<p>That\u2019s SIX features!  And you can\u2019t even download it from Google Play, because\nI\u2019m too cheap to pay the $25 fee!</p>\n<footer><cite><a href=\"/blog/2014/08/26/speeker/\">introductory blog post</a></cite></footer></blockquote></div>",
        "title": "Speeker",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "think": {
        "bugtracker": "https://github.com/Kwpolska/think/issues",
        "data": "",
        "description": "Terminal Think Music: for when it takes too long to do something.",
        "devstatus": "6",
        "download": "https://pypi.python.org/pypi/think",
        "filters": "",
        "github": "https://github.com/Kwpolska/think",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/think/",
        "role": "Maintainer",
        "slug": "think",
        "sort": "78",
        "status": "",
        "template": "",
        "text": "<div><p>Are you executing a process that takes a long time?  Do you want to know that it\u2019s\nstill working while you are in another terminal/making coffee?  Do you have a\nfavorite game show tune to play while doing something?</p>\n<p>If yes: <code class=\"docutils literal\">think</code> is just for you.</p>\n<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <code class=\"docutils literal\">think</code> from <a class=\"reference external\" href=\"https://pypi.python.org/pypi/think\">PyPI</a> (with <code class=\"docutils literal\">pip install think</code>). Arch Linux\nusers can install the <code class=\"docutils literal\">think</code> package from the AUR.</p>\n</div>\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>Create a file named <code class=\"docutils literal\"><span class=\"pre\">~/.config/think.conf</span></code> (or wherever your <code class=\"docutils literal\">XDG_CONFIG_HOME</code> is) with the following four lines:</p>\n<pre class=\"literal-block\">[Think]\ncommand = play\nfile = /home/kwpolska/Dropbox/Media/Wielka Gra.mp3\nbehavior = wait</pre>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal\">command</code> is the command of the player that will be executed.  You can use\n<code class=\"docutils literal\">play</code> (from <code class=\"docutils literal\">sox</code>) or any other fast CLI music player.</p></li>\n<li><p><code class=\"docutils literal\">file</code> is the filename that will be given as the sole argument to the play command. No escaping is necessary. I\u2019m using the <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=Nnu7I3b7ZbY\">Wielka Gra</a> theme, Americans might want <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=vXGhvoekY44\">Jeopardy! Think Music</a> (also the namesake for this command), Brits might want the <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=M2dhD9zR6hk\">Countdown theme</a>.</p></li>\n<li><p><code class=\"docutils literal\">behavior</code> can be one of:</p>\n<ul>\n<li><p><code class=\"docutils literal\">return</code> \u2014 return control to the terminal as soon as the program finishes, without stopping the music</p></li>\n<li><p><code class=\"docutils literal\">wait</code> \u2014 wait until music stops before returning control</p></li>\n<li><p><code class=\"docutils literal\">stop</code> \u2014 stop the music and return control immediately</p></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>Prepend <code class=\"docutils literal\">think</code> before the command that takes too long to execute:</p>\n<pre class=\"literal-block\">think sleep 120</pre>\n<p>See also: <a class=\"reference external\" href=\"/pl/projects/nap/\">nap \u2014 sleep with a progressbar</a></p>\n</div></div>",
        "title": "Terminal Think Music",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "todolist": {
        "bugtracker": "https://github.com/Kwpolska/todolist/issues",
        "data": "",
        "description": "Chris Warrick\u2019s LaTeX Todo List",
        "devstatus": "6",
        "download": "https://github.com/Kwpolska/todolist/releases",
        "filters": "",
        "github": "https://github.com/Kwpolska/todolist",
        "hyphenate": "",
        "language": "LaTeX",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/todolist/",
        "role": "Maintainer",
        "slug": "todolist",
        "sort": "82",
        "status": "",
        "template": "",
        "text": "<div><p>I believe that the best way to manage things to do is an analog piece of paper.\nThose pieces of paper come out of a nicely crafted template, courtesy of\nLuaLaTeX (or XeLaTeX).</p>\n<p>This is a simple template for analog todo lists. It is built in LaTeX. Users\ncan customize it (with task files) or print out empty templates.</p></div>",
        "title": "LaTeX Todo List",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    },
    "upass": {
        "bugtracker": "https://github.com/Kwpolska/upass/issues",
        "data": "",
        "description": "upass: because pass is too hard.",
        "devstatus": "3",
        "download": "https://pypi.python.org/pypi/upass",
        "featured": "true",
        "filters": "",
        "gallery": "/galleries/upass/",
        "github": "https://github.com/Kwpolska/upass",
        "hyphenate": "",
        "language": "Python",
        "license": "3-clause BSD",
        "permalink": "/pl/projects/upass/",
        "previewimage": "/projects/_banners/upass.png",
        "role": "Maintainer",
        "slug": "upass",
        "sort": "92",
        "status": "",
        "template": "",
        "text": "<div><p><code class=\"docutils literal\">upass</code> is an interface to <a class=\"reference external\" href=\"http://www.passwordstore.org/\">pass</a>, the standard Unix password manager.</p>\n<p><code class=\"docutils literal\">upass</code> is using urwid, which means it has a friendly full-screen console\ninterface.  It shows your directory structure (with flattened subdirectories)\nand calls <code class=\"docutils literal\">pass</code> when requested.  (It does not use <code class=\"docutils literal\">pass <span class=\"pre\">-c</span></code> due to\nsubprocessing issues, instead opting for a manual copy \u2014 note that the\nclipboard <strong>will not be cleared</strong>).</p>\n<p>If you want to see how it looks, check out <a class=\"reference external\" href=\"/galleries/upass/\">the screenshots gallery</a>.</p>\n<p><code class=\"docutils literal\">upass</code> is under development (and was initially written in one evening).  If you have\nideas, bugs, or want to help, hop over to the <a class=\"reference external\" href=\"https://github.com/Kwpolska/upass\">GitHub page</a>.</p>\n<p>You can install <code class=\"docutils literal\">upass</code> from <a class=\"reference external\" href=\"https://pypi.python.org/pypi/upass\">PyPI</a> (with <code class=\"docutils literal\">pip install upass</code>). Arch Linux\nusers can install the <code class=\"docutils literal\">upass</code> package from the AUR.</p></div>",
        "title": "upass",
        "type": "text",
        "updated": "1970-01-01T00:00:00+00:00"
    }
}