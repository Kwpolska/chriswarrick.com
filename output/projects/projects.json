{"speeker": {"status": "4", "sort": "79", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/speeker", "description": "An Android TTS client.", "license": "3-clause BSD", "title": "Speeker", "text": "<div><p>This is a simple Android app for Text-to-Speech. It uses the default system voice.</p>\n<p>See also: <a class=\"reference external\" href=\"https://chriswarrick.com/galleries/speeker/\">screenshots</a> and <a class=\"reference external\" href=\"https://chriswarrick.com/blog/2014/08/26/speeker/\">introductory blog post</a>.</p>\n<blockquote>\n<p>Speeker is a very small and easy frontend to the system TTS service.  In its\ncurrent iteration, it\u2019s quite limited. The complete feature set is:</p>\n<ul class=\"simple\">\n<li>speak text provided by the user</li>\n<li>speak text in the system default TTS language (as set in Android settings,\nand there is currently no button to even get you there)</li>\n<li>clear the text box</li>\n<li>display About screen</li>\n<li>display open source licenses</li>\n<li>open my website</li>\n</ul>\n<p>That\u2019s SIX features!  And you can\u2019t even download it from Google Play, because\nI\u2019m too cheap to pay the $25 fee!</p>\n<footer><cite><a href=\"/blog/2014/08/26/speeker/\">introductory blog post</a></cite></footer></blockquote></div>", "filters": "", "permalink": "/projects/speeker/", "language": "Java", "featured": "", "role": "Maintainer", "template": "", "download": "https://github.com/Kwpolska/speeker/releases", "logo": "/projects/_logos/speeker.png", "hidden": "", "type": "text", "slug": "speeker"}, "nikola": {"status": "5", "sort": "95", "updated": "1970-01-01T00:00:00+00:00", "description": "A Static Site and Blog Generator.", "text": "<div><blockquote>\n<p>In goes content, out comes a website, ready to deploy.</p>\n<footer><cite>Nikola tagline</cite></footer>\n</blockquote><p>Nikola is a static site and blog generator, written in Python.  It can\nuse Mako and Jinja2 templates, and input in many popular markup\nformats, such as reStructuredText and Markdown \u2014 and can even turn\nIPython Notebooks into blog posts! It also supports image galleries,\nand is multilingual.  Nikola is flexible, and page builds are\nextremely fast, courtesy of doit (which is rebuilding only what has\nbeen changed).</p>\n<p>Unlike many other generators, Nikola comes with <em>batteries included</em> and offers\nmany features out of the box, making it easy to create a modern website.</p>\n<p>I am a co-maintainer of Nikola, responsible for a sizeable fraction of commits\n\u2014 but I am not the one who did the most work and came up with the idea (it was\n<a class=\"reference external\" href=\"http://ralsina.me/\">Roberto Alsina</a>).</p>\n<p>See also: <cite>Coil CMS &lt;../coil/&gt;</cite> \u2014 a web interface for Nikola.</p>\n<p>This very website is powered by Nikola.</p></div>", "featured": "True", "link": "https://getnikola.com/", "filters": "", "download": "https://pypi.python.org/pypi/Nikola", "logo": "/projects/_logos/nikola.png", "slug": "nikola", "permalink": "/projects/nikola/", "github": "https://github.com/getnikola/nikola", "language": "Python", "license": "MIT", "title": "Nikola", "type": "text", "role": "Co-Maintainer", "template": "", "previewimage": "/projects/_banners/nikola.png", "hidden": "", "bugtracker": "https://github.com/getnikola/nikola/issues"}, "aurqt": {"status": "7", "sort": "10", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/aurqt", "description": "A graphical AUR manager.", "license": "3-clause BSD", "title": "aurqt", "type": "text", "filters": "", "permalink": "/projects/aurqt/", "language": "Python", "featured": "False", "role": "Maintainer", "template": "", "text": "<div><p>aurqt, the graphical AUR manager, has been abandoned and is not available\nanymore due to multiple changes in the AUR itself and the status of the code\nbase that would require a full rewrite.  I apologize for the inconvenience.</p>\n<p>aurqt depended on <a class=\"reference external\" href=\"/projects/pkgbuilder/\">PKGBUILDer</a> for most features.</p>\n<p>(If anyone wants to take over development, please contact me.)</p></div>", "logo": "/projects/_logos/aurqt.png", "hidden": "", "bugtracker": "https://github.com/Kwpolska/aurqt/issues", "slug": "aurqt"}, "projectpages": {"status": "5", "sort": "50", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/getnikola/plugins/tree/master/v7/projectpages", "description": "A generator for rich project pages.", "license": "MIT", "title": "Project Pages plugin for Nikola", "type": "text", "filters": "", "permalink": "/projects/projectpages/", "language": "Python", "featured": "", "link": "https://plugins.getnikola.com/#projectpages", "template": "", "text": "<body><p>The plugin generates state-of-the-art project pages.  It is compatible with\n<a class=\"reference external\" href=\"/projects/nikola/\">Nikola</a>.  It leverages existing features (story generation,\ncustom metadata) and builds on top of them to create a rich experience.  The\nplugin powers this very <a class=\"reference external\" href=\"/projects/index.html\">projects page</a>.</p></body>", "role": "Maintainer", "hidden": "", "bugtracker": "https://github.com/getnikola/plugins/issues", "slug": "projectpages"}, "nap": {"status": "5", "sort": "90", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/nap", "description": "sleep with a progressbar.", "license": "3-clause BSD", "title": "nap", "type": "text", "filters": "", "permalink": "/projects/nap/", "language": "C", "featured": "False", "role": "Maintainer", "template": "", "text": "<div><p><tt class=\"docutils literal\">nap</tt> is a special implementation of <tt class=\"docutils literal\">sleep</tt>.  The main difference is the\npresence of a progressbar: <tt class=\"docutils literal\">nap</tt> prints out a progressbar and shows how much\ntime has already elapsed.  It is useful for impromptu \u201cscheduling\u201d, so you know\nwhen will the process/wait finish.</p>\n<p><tt class=\"docutils literal\">nap</tt> takes the best features from both the GNU and BSD variants of\n<tt class=\"docutils literal\">sleep</tt>: it values BSD-style simplicity, but also supports GNU-style input\nwith units (<tt class=\"docutils literal\">s|m|h|d</tt>).</p>\n<p>See also: <a class=\"reference external\" href=\"/projects/think/\">think \u2014\u00a0Terminal Think Music</a></p></div>", "download": "https://github.com/Kwpolska/nap/releases", "hidden": "", "bugtracker": "https://github.com/Kwpolska/nap/issues", "slug": "nap"}, "android_flashlight": {"status": "7", "sort": "1", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/flashlight", "description": "Yet another Android flashlight.", "license": "3-clause BSD", "title": "Android Flashlight", "text": "<div><p>This is yet another Android flashlight.  It does the usual thing: turn the\ncamera flash LED on.  It can\u2019t do anything else.</p>\n<p>This is a code dump/proof-of-concept.</p></div>", "filters": "", "permalink": "/projects/android_flashlight/", "language": "Java", "featured": "", "role": "Maintainer", "template": "", "download": "https://github.com/Kwpolska/flashlight/releases", "hidden": "", "type": "text", "slug": "android_flashlight"}, "peselreader": {"status": "6", "sort": "70", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/peselreader", "description": "A small program for reading PESEL numbers.", "license": "3-clause BSD", "title": "PESEL Reader", "type": "text", "filters": "", "permalink": "/projects/peselreader/", "language": "C", "featured": "False", "role": "Maintainer", "template": "", "text": "<div><p>This very small piece of software decodes PESEL numbers (think SSNs for Polish\ncitizens) into C structs.  The following information is encoded in a PESEL\nnumber (11 digits long; the positions are zero-indexed):</p>\n<ul class=\"simple\">\n<li>Date of Birth (positions 0-5)</li>\n<li>Gender (position 9)</li>\n<li>Checksum (position 10)</li>\n</ul>\n<p>The PESEL Reader is based on the <a class=\"reference external\" href=\"https://msw.gov.pl/pl/sprawy-obywatelskie/centralne-rejestry-pan/32,PESEL.html?sid=1b5a96b2ef9e1ba0b2d3fa56f590c29f#wjakispos%C3%B3b\">official specification</a>, as published by the Ministry of the Interior of the Republic of Poland.</p></div>", "download": "https://github.com/Kwpolska/peselreader/releases", "hidden": "", "bugtracker": "https://github.com/Kwpolska/peselreader/issues", "slug": "peselreader"}, "python-project-template": {"status": "5", "sort": "80", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/python-project-template", "description": "INSERT TAGLINE HERE.\u2122", "license": "3-clause BSD", "title": "Python Project Template", "type": "text", "filters": "", "text": "<div><p>A template for Python projects.  It makes it easy to create new Python\nprojects, with just a few replacements required.  Many things are already\nthere, already prepared for you.</p>\n<p>(Just don\u2019t get scared when you see how massive the README is.  It\u2019d be much\nshorter in code and not in prose.  Besides, a significant portion of it is not\ntext)</p>\n<div class=\"section\" id=\"contents\">\n<h2>Contents</h2>\n<p>The template contains the following files to get you started:</p>\n<ul class=\"simple\">\n<li>pre-configured Sphinx with:<ul>\n<li><tt class=\"docutils literal\">CONTRIBUTING.rst</tt> guide (used by GitHub when sending a pull request or an issue)</li>\n<li><tt class=\"docutils literal\">LICENSE.rst</tt></li>\n<li>an empty <tt class=\"docutils literal\">CHANGELOG.rst</tt></li>\n<li>this (worthless for most people) <tt class=\"docutils literal\">README.rst</tt> and a bare-bones <tt class=\"docutils literal\">index.rst</tt> page</li>\n</ul>\n</li>\n<li>The exact same files in <tt class=\"docutils literal\">/</tt>, which are fragile and <strong>MAY NOT</strong> be modified\nas they are replaced with copies in <tt class=\"docutils literal\">/docs</tt> by the <tt class=\"docutils literal\">release</tt>\nscript</li>\n<li><tt class=\"docutils literal\">__init__.py</tt> and <tt class=\"docutils literal\">template.py</tt> files in the Python package directory</li>\n<li>A good-enough <tt class=\"docutils literal\">setup.py</tt> file</li>\n<li><tt class=\"docutils literal\">tests.py</tt> containing some <em>Is My Python Sane?</em>-style tests</li>\n<li>A sample <tt class=\"docutils literal\">/usr/bin/</tt> script</li>\n<li>Addons for Qt users</li>\n<li>PKGBUILDs for the Arch Linux User Repository (AUR)</li>\n<li>A state-of-the-art <tt class=\"docutils literal\">release</tt> script, the operations of which are:<ul>\n<li>querying the current branch for version number</li>\n<li>updating <tt class=\"docutils literal\">/docs/CHANGELOG.rst</tt></li>\n<li>bumping the version number in all the files, changing dates where necessary</li>\n<li>copying over <tt class=\"docutils literal\">/docs/README.rst</tt>,  <tt class=\"docutils literal\">/docs/CHANGELOG.rst</tt> and <tt class=\"docutils literal\">/docs/CONTRIBUTING.rst</tt> to <tt class=\"docutils literal\">/</tt></li>\n<li>locale generation (via the <tt class=\"docutils literal\">.pypt/localegen</tt> script)</li>\n<li>running <tt class=\"docutils literal\">import $project</tt> and the testsuite</li>\n<li>creating and uploading AUR packages</li>\n<li>committing into git, finishing the <tt class=\"docutils literal\">git flow</tt> release</li>\n</ul>\n</li>\n</ul>\n</div></div>", "permalink": "/projects/python-project-template/", "language": "Python", "featured": "True", "role": "Maintainer", "template": "", "previewimage": "/projects/_banners/pypt.png", "hidden": "", "bugtracker": "https://github.com/Kwpolska/python-project-template/issues", "slug": "python-project-template"}, "pkgbuilder": {"sort": "100", "text": "<div><p>PKGBUILDer is an AUR helper.  It is used to build packages from the Arch User\nRepository.  PKGBUILDer automates the process and provides a command-line user\ninterface.</p>\n<p>There are two executables: <tt class=\"docutils literal\">pkgbuilder</tt> to run the main mode, which builds\nAUR packages and also ABS packages (instead of downloading ready-made binaries)\nand <tt class=\"docutils literal\">pb</tt> which builds AUR packages and downloads binary packages from the\nrepos (calls <tt class=\"docutils literal\">pacman</tt>).  The user interface to both mimics <tt class=\"docutils literal\">pacman</tt> and\n<tt class=\"docutils literal\">makepkg</tt> as close as possible.</p>\n<p>PKGBUILDer\u2019s main guideline is \u201cthe user knows what they are doing\u201d \u2014 no\nunnecessary questions are asked.  By typing in a <tt class=\"docutils literal\">pkgbuilder</tt> command, the\nuser trusts the PKGBUILD file (we hope you read it).  This allows us to be very\nfast.</p>\n<p>PKGBUILDer also implements the most modern techniques available, including\nhandling AUR package upgrades in a <strong>single HTTP request</strong> instead of hundreds\nor even thousands of them, depending on how many packages you have installed.</p>\n<p>PKGBUILDer should be installed from the AUR itself, by installing the\n<tt class=\"docutils literal\">pkgbuilder</tt> package:</p>\n<pre class=\"literal-block\">\nwget https://aur.archlinux.org/packages/pk/pkgbuilder/pkgbuilder.tar.gz\ntar -xzvf pkgbuilder\ncd pkgbuilder\nmakepkg -si\n</pre></div>", "featured": "True", "filters": "", "download": "https://pypi.python.org/pypi/pkgbuilder", "logo": "/projects/_logos/pkgbuilder.png", "title": "PKGBUILDer", "role": "Maintainer", "template": "", "previewimage": "/projects/_banners/pkgbuilder.png", "hidden": "", "type": "text", "status": "6", "updated": "1970-01-01T00:00:00+00:00", "description": "An AUR helper (and library) in Python 3.", "slug": "pkgbuilder", "permalink": "/projects/pkgbuilder/", "github": "https://github.com/Kwpolska/pkgbuilder", "language": "Python", "license": "3-clause BSD", "bugtracker": "https://github.com/Kwpolska/pkgbuilder/issues"}, "coil": {"sort": "94", "text": "<div><p>Coil CMS is a user-friendly CMS frontend for <a class=\"reference external\" href=\"/projects/nikola/\">Nikola</a> \u2014 a static site and blog generator, written in Python.</p>\n<p>Coil CMS can lower the barrier to entry for people wanting to write posts: with\nCoil, users do not need to know any markup languages (it comes with a WYSIWYG\neditor), Unix and don\u2019t even need to know what a <em>static site generator</em> is.\nThey can just write and hit <em>Rebuild</em>, and everything will be taken care of for\nthem by Coil CMS.</p>\n<p>Coil CMS is using the Flask framework and heavily depends on parts of the\nNikola codebase.  It offers a friendly user interface and the same care and\nattention to detail Nikola users are accustomed to.</p></div>", "featured": "False", "filters": "", "download": "https://pypi.python.org/pypi/coil", "title": "Coil CMS", "role": "Maintainer", "template": "", "hidden": "", "type": "text", "status": "5", "updated": "1970-01-01T00:00:00+00:00", "description": "A user-friendly CMS frontend for Nikola.", "link": "https://coil.readthedocs.org/", "slug": "coil", "permalink": "/projects/coil/", "github": "https://github.com/getnikola/coil", "language": "Python", "license": "3-clause BSD", "bugtracker": "https://github.com/getnikola/nikola/issues"}, "think": {"status": "5", "sort": "90", "updated": "1970-01-01T00:00:00+00:00", "github": "https://github.com/Kwpolska/think", "description": "Terminal Think Music: for when it takes too long to do something.", "license": "3-clause BSD", "title": "Terminal Think Music", "type": "text", "filters": "", "permalink": "/projects/think/", "language": "Python", "featured": "", "role": "Maintainer", "template": "", "text": "<div><p>Are you executing a process that takes a long time?  Do you want to know that it\u2019s\nstill working while you are in another terminal/making coffee?  Do you have a\nfavorite game show tune to play while doing something?</p>\n<p>If yes: <tt class=\"docutils literal\">think</tt> is just for you.</p>\n<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt class=\"docutils literal\">think</tt> from <a class=\"reference external\" href=\"https://pypi.python.org/pypi/think\">PyPI</a> (with <tt class=\"docutils literal\">pip install think</tt>). Arch Linux\nusers can install the <tt class=\"docutils literal\">think</tt> package from the AUR.</p>\n</div>\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>Create a file named <tt class=\"docutils literal\"><span class=\"pre\">~/.config/think.conf</span></tt> (or wherever your <tt class=\"docutils literal\">XDG_CONFIG_HOME</tt> is) with the following four lines:</p>\n<pre class=\"literal-block\">\n[Think]\ncommand = play\nfile = /home/kwpolska/Dropbox/Media/Wielka Gra.mp3\nbehavior = wait\n</pre>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">command</tt> is the command of the player that will be executed.  You can use\n<tt class=\"docutils literal\">play</tt> (from <tt class=\"docutils literal\">sox</tt>) or any other fast CLI music player.</li>\n<li><tt class=\"docutils literal\">file</tt> is the filename that will be given as the sole argument to the play command. No escaping is necessary. I\u2019m using the <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=Nnu7I3b7ZbY\">Wielka Gra</a> theme, Americans might want <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=vXGhvoekY44\">Jeopardy! Think Music</a> (also the namesake for this command), Brits might want the <a class=\"reference external\" href=\"https://www.youtube.com/watch?v=M2dhD9zR6hk\">Countdown theme</a>.</li>\n<li><tt class=\"docutils literal\">behavior</tt> can be one of:<ul>\n<li><tt class=\"docutils literal\">return</tt> \u2014 return control to the terminal as soon as the program finishes, without stopping the music</li>\n<li><tt class=\"docutils literal\">wait</tt> \u2014 wait until music stops before returning control</li>\n<li><tt class=\"docutils literal\">stop</tt> \u2014 stop the music and return control immediately</li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>Prepend <tt class=\"docutils literal\">think</tt> before the command that takes too long to execute:</p>\n<pre class=\"literal-block\">\nthink sleep 120\n</pre>\n<p>See also: <a class=\"reference external\" href=\"/projects/nap/\">nap \u2014 sleep with a progressbar</a></p>\n</div></div>", "download": "https://pypi.python.org/pypi/think", "hidden": "", "bugtracker": "https://github.com/Kwpolska/think/issues", "slug": "think"}}